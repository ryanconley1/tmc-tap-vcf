#@ load("@ytt:data", "data")

#@ view_agent = "eks."+ data.values.clusters.view.credName + "." + data.values.clusters.view.region + "." + data.values.clusters.view.name
#@ build_agent = "eks."+ data.values.clusters.build.credName + "." + data.values.clusters.build.region + "." + data.values.clusters.build.name
#@ run_agent = "eks."+ data.values.clusters.run.credName + "." + data.values.clusters.run.region + "." + data.values.clusters.run.name

fullName:
  name: #@ data.values.tap.name
meta:
  generation: "1"
spec:
  clusterPackageData:
  - clusterFullName:
      managementClusterName: eks
      name: #@ view_agent
      provisionerName: eks
      orgId: #@ data.values.orgId
    inlineValues:
      package_overlays:
      - name: cert-manager
        secrets:
          - name: cert-man-sa-arn
      excluded_packages:
      - fluxcd.source.controller.tanzu.vmware.com
      appliveview:
        ingressEnabled: true
      ceip_policy_disclosed: true
      deployed_through_tmc: true
      metadata_store:
        ingress_issuer: tap-ingress-selfsigned
        ns_for_export_app_cert: '*'
      profile: view
      shared:
        ingress_domain: #@ data.values.tap.profiles.view.ingress_domain
        ingress_issuer: #@ data.values.tap.profiles.view.ingress_issuer
      tap_gui:
        app_config:
          auth:
            allowGuestAccess: true
      tap_telemetry:
        customer_entitlement_account_number: ""
    packageRef:
      packageMetadataName: tap.tanzu.vmware.com
      versionSelection:
        constraints: #@ data.values.tap.version
    tapProfile: view
  - clusterFullName:
      managementClusterName: eks
      name: #@ build_agent
      provisionerName: eks
      orgId: #@ data.values.orgId
    clusterUrl: #@ data.values.tap.profiles.build.clusterUrl
    clusterCaCert: #@ data.values.tap.profiles.build.clusterCA
    inlineValues:
      ceip_policy_disclosed: true
      deployed_through_tmc: true
      excluded_packages:
      - fluxcd.source.controller.tanzu.vmware.com
      buildservice:
        kp_default_repository: #@ data.values.tap.profiles.build.ecr.server + "/" + data.values.tap.profiles.build.ecr.tbs_repo
        kp_default_repository_aws_iam_role_arn:  #@ data.values.tap.profiles.build.aws_tbs_role_arn
      grype:
        metadataStore:
          authSecret:
            importFromNamespace: metadata-store-secrets
            name: store-auth-token
          caSecret:
            importFromNamespace: metadata-store-secrets
            name: store-ca-cert
          url: #@ "https://metadata-store." + data.values.tap.profiles.view.ingress_domain
      namespace_provisioner:
        aws_iam_role_arn: #@ data.values.tap.profiles.build.aws_workload_role_arn
        additional_sources:
        - git:
            ref: origin/main
            subPath: #@ "ns-provisioner/clusters/"+ data.values.clusters.build.name + "/config"
            url: #@ data.values.gitrepo
          path: _ytt_lib/testing-scanning-supplychain-parameterized-setup
        controller: false
        default_parameters:
          supply_chain_service_account:
            secrets:
            - github-secret
        gitops_install:
          ref: origin/main
          subPath: #@ "ns-provisioner/clusters/"+ data.values.clusters.build.name + "/namespaces"
          url: #@ data.values.gitrepo
      supply_chain: "testing_scanning"
      ootb_supply_chain_testing_scanning:
        gitops:
          commit_strategy: pull_request
          pull_request:
            commit_branch: ""
            pull_request_body: generated by supply chain
            pull_request_title: ready for review
            server_kind: github
          repository_name: #@ data.values.gitrepo_name
          repository_owner: #@ data.values.gitrepo_owner
          server_address: https://github.com/
          ssh_secret: github-secret
        registry:
          repository: #@ data.values.tap.profiles.build.ecr.workload_repo
          server: #@ data.values.tap.profiles.build.ecr.server
      ootb_templates:
        iaas_auth: true
      profile: build
    packageRef:
      packageMetadataName: tap.tanzu.vmware.com
      versionSelection:
        constraints: #@ data.values.tap.version
    tapProfile: build  
  - clusterFullName:
      managementClusterName: eks
      name: #@ run_agent
      provisionerName: eks
      orgId: #@ data.values.orgId
    clusterUrl: #@ data.values.tap.profiles.run.clusterUrl
    clusterCaCert: #@ data.values.tap.profiles.run.clusterCA
    inlineValues:
      ceip_policy_disclosed: true
      deployed_through_tmc: true
      excluded_packages:
      - fluxcd.source.controller.tanzu.vmware.com
      namespace_provisioner:
        additional_sources:
        - git:
            ref: origin/main
            subPath: #@ "ns-provisioner/clusters/"+ data.values.clusters.run.name + "/config"
            url: #@ data.values.gitrepo
        controller: false
        default_parameters:
          supply_chain_service_account:
            secrets:
            - github-secret
        gitops_install:
          ref: origin/main
          subPath: #@ "ns-provisioner/clusters/"+ data.values.clusters.run.name + "/namespaces"
          url: #@ data.values.gitrepo
      package_overlays:
      - name: cert-manager
        secrets:
          - name: cert-man-sa-arn
      profile: run
      shared:
        ingress_domain: #@ data.values.tap.profiles.run.ingress_domain
        ingress_issuer: #@ data.values.tap.profiles.run.ingress_issuer
      tap_telemetry:
        customer_entitlement_account_number: ""
    packageRef:
      packageMetadataName: tap.tanzu.vmware.com
      versionSelection:
        constraints: 1.7.0
    tapProfile: run  
type:
  kind: Solution
  package: vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution
  version: v1alpha1

